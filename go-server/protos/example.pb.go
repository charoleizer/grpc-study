// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/example.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Point struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Canvas               *Canvas  `protobuf:"bytes,3,opt,name=canvas,proto3" json:"canvas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_dec4abc814546207, []int{0}
}

func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Point) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Point) GetCanvas() *Canvas {
	if m != nil {
		return m.Canvas
	}
	return nil
}

type Canvas struct {
	Width                int64    `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height               int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Canvas) Reset()         { *m = Canvas{} }
func (m *Canvas) String() string { return proto.CompactTextString(m) }
func (*Canvas) ProtoMessage()    {}
func (*Canvas) Descriptor() ([]byte, []int) {
	return fileDescriptor_dec4abc814546207, []int{1}
}

func (m *Canvas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Canvas.Unmarshal(m, b)
}
func (m *Canvas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Canvas.Marshal(b, m, deterministic)
}
func (m *Canvas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Canvas.Merge(m, src)
}
func (m *Canvas) XXX_Size() int {
	return xxx_messageInfo_Canvas.Size(m)
}
func (m *Canvas) XXX_DiscardUnknown() {
	xxx_messageInfo_Canvas.DiscardUnknown(m)
}

var xxx_messageInfo_Canvas proto.InternalMessageInfo

func (m *Canvas) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Canvas) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*Point)(nil), "example.Point")
	proto.RegisterType((*Canvas)(nil), "example.Canvas")
}

func init() { proto.RegisterFile("protos/example.proto", fileDescriptor_dec4abc814546207) }

var fileDescriptor_dec4abc814546207 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x4f, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0xd5, 0x03, 0x73, 0x85, 0xd8, 0xa1,
	0x5c, 0x25, 0x1f, 0x2e, 0xd6, 0x80, 0xfc, 0xcc, 0xbc, 0x12, 0x21, 0x1e, 0x2e, 0xc6, 0x0a, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xc6, 0x20, 0xc6, 0x0a, 0x10, 0xaf, 0x52, 0x82, 0x09, 0xc2, 0xab, 0x14,
	0x52, 0xe7, 0x62, 0x4b, 0x4e, 0xcc, 0x2b, 0x4b, 0x2c, 0x96, 0x60, 0x56, 0x60, 0xd4, 0xe0, 0x36,
	0xe2, 0xd7, 0x83, 0x99, 0xe6, 0x0c, 0x16, 0x0e, 0x82, 0x4a, 0x2b, 0x99, 0x71, 0xb1, 0x41, 0x44,
	0x84, 0x44, 0xb8, 0x58, 0xcb, 0x33, 0x53, 0x4a, 0x32, 0xc0, 0x46, 0x32, 0x07, 0x41, 0x38, 0x42,
	0x62, 0x5c, 0x6c, 0x19, 0xa9, 0x99, 0xe9, 0x19, 0x25, 0x60, 0xb3, 0x99, 0x83, 0xa0, 0x3c, 0x23,
	0x4b, 0x2e, 0xce, 0x90, 0xa2, 0xc4, 0xbc, 0xe2, 0xb4, 0xfc, 0xa2, 0x5c, 0x21, 0x1d, 0x2e, 0x96,
	0xb4, 0x9c, 0xcc, 0x02, 0x21, 0x3e, 0xb8, 0x2d, 0x60, 0x17, 0x4a, 0xa1, 0xf1, 0x95, 0x18, 0x34,
	0x18, 0x0d, 0x18, 0x93, 0xd8, 0xc0, 0x1e, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x52, 0x78,
	0xee, 0xbe, 0xe8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TransformClient is the client API for Transform service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransformClient interface {
	Flip(ctx context.Context, opts ...grpc.CallOption) (Transform_FlipClient, error)
}

type transformClient struct {
	cc *grpc.ClientConn
}

func NewTransformClient(cc *grpc.ClientConn) TransformClient {
	return &transformClient{cc}
}

func (c *transformClient) Flip(ctx context.Context, opts ...grpc.CallOption) (Transform_FlipClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Transform_serviceDesc.Streams[0], "/example.Transform/flip", opts...)
	if err != nil {
		return nil, err
	}
	x := &transformFlipClient{stream}
	return x, nil
}

type Transform_FlipClient interface {
	Send(*Point) error
	Recv() (*Point, error)
	grpc.ClientStream
}

type transformFlipClient struct {
	grpc.ClientStream
}

func (x *transformFlipClient) Send(m *Point) error {
	return x.ClientStream.SendMsg(m)
}

func (x *transformFlipClient) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TransformServer is the server API for Transform service.
type TransformServer interface {
	Flip(Transform_FlipServer) error
}

// UnimplementedTransformServer can be embedded to have forward compatible implementations.
type UnimplementedTransformServer struct {
}

func (*UnimplementedTransformServer) Flip(srv Transform_FlipServer) error {
	return status.Errorf(codes.Unimplemented, "method Flip not implemented")
}

func RegisterTransformServer(s *grpc.Server, srv TransformServer) {
	s.RegisterService(&_Transform_serviceDesc, srv)
}

func _Transform_Flip_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TransformServer).Flip(&transformFlipServer{stream})
}

type Transform_FlipServer interface {
	Send(*Point) error
	Recv() (*Point, error)
	grpc.ServerStream
}

type transformFlipServer struct {
	grpc.ServerStream
}

func (x *transformFlipServer) Send(m *Point) error {
	return x.ServerStream.SendMsg(m)
}

func (x *transformFlipServer) Recv() (*Point, error) {
	m := new(Point)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Transform_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.Transform",
	HandlerType: (*TransformServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "flip",
			Handler:       _Transform_Flip_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/example.proto",
}
